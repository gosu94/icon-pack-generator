spring.application.name=icon-pack-generator

# Server configuration
server.port=8080

# AI Services Enable/Disable Flags
ai.services.flux-ai.enabled=false

ai.services.recraft.enabled=false

ai.services.photon.enabled=false

ai.services.gpt.enabled=true

ai.services.imagen.enabled=false

# Fal.ai Configuration
fal.ai.api-key=${FAL_KEY:api-key}
fal.ai.model-endpoint=fal-ai/flux-pro/v1.1
fal.ai.timeout-seconds=120
fal.ai.max-retries=3
fal.ai.aspect-ratio=1:1
fal.ai.num-images=1
fal.ai.enable-safety-checker=true

# OpenAI Configuration (for GPT Image model via fal.ai)
openai.api-key=${OPENAI_API_KEY:your-openai-api-key-here}

# Background Removal Configuration
background-removal.enabled=true
background-removal.rembg-command=rembg
background-removal.timeout-seconds=30
background-removal.model=isnet-general-use
#background-removal.model=u2net
# Directory to save images after background removal. This path is relative to the application's root.
background-removal.output-dir=generated-images



# Logging configuration
logging.level.com.gosu.iconpackgenerator=INFO
logging.level.ai.fal.client=INFO
logging.level.com.gosu.iconpackgenerator.domain.service.FluxModelService=INFO
logging.level.org.springframework.web.client=INFO

# Enable HTTP request/response logging
logging.level.org.apache.http=DEBUG
logging.level.httpclient.wire=DEBUG

# Spring Boot configuration
spring.thymeleaf.cache=false
spring.web.resources.cache.period=0

# Actuator configuration
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized

# Async request timeout configuration (for image generation)
spring.mvc.async.request-timeout=300000
server.tomcat.connection-timeout=300000
spring.transaction.default-timeout=300

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Database Configuration
# PostgreSQL configuration for production
spring.datasource.url=jdbc:postgresql://localhost:5432/icon_pack_generator
spring.datasource.username=${POSTGRES_USER:iconpack}
spring.datasource.password=${POSTGRES_PASSWORD:iconpack123}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

spring.web.resources.static-locations=${STATIC_LOCATIONS}

# File storage configuration
app.file-storage.base-path=${FILE_STORAGE_PATH:src/main/resources/static/user-icons}

# SpringDoc OpenAPI configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.disable-swagger-default-url=true
# Don't include error endpoints in API docs
springdoc.show-actuator=false
# Exclude view controllers from documentation
springdoc.paths-to-exclude=/error
